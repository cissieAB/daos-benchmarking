#!/bin/bash

#PBS -l walltime=00:59:00
#PBS -l select=8
#PBS -A e2sar-daos
#PBS -q debug
#PBS -l filesystems=home:flare:daos_user_fs
#PBS -j oe

# Load DAOS module
module use /soft/modulefiles/ || { error "Failed to use modulefiles"; exit 1; }
module load daos || { error "Failed to load DAOS module"; exit 1; }

# Variables
POOL_NAME=e2sar2
NNODES=`wc -l < $PBS_NODEFILE`

cd $PBS_O_WORKDIR
export PATH=$PATH:$HOME/ior/install/bin
CONTAINER_NAME="${USER}-ior_n${NNODES}"
MOUNT_POINT="/tmp/${POOL_NAME}/${CONTAINER_NAME}"

# Check if container exists
if daos cont query "$POOL_NAME" "$CONTAINER_NAME" >/dev/null 2>&1; then
    echo "Container $CONTAINER_NAME already exists, destroying it..."
    if ! daos container destroy "$POOL_NAME" "$CONTAINER_NAME"; then
        error "Failed to destroy container $CONTAINER_NAME"
        exit 1
    fi
else
    echo "Container $CONTAINER_NAME does not exist, will create a new one."
fi
# Create container
if ! daos container create --type=POSIX "$POOL_NAME" "$CONTAINER_NAME" --properties=rd_fac:1; then
    error "Failed to create container $CONTAINER_NAME"
    exit 1
fi
echo "Get container properties:"
daos container get-prop $POOL_NAME $CONTAINER_NAME

launch-dfuse.sh "$POOL_NAME:$CONTAINER_NAME"

RESULTS_DIR="io500_$(date +%Y%m%d_%H-%M-%S)"
mkdir -p ${RESULTS_DIR}

IO500_WORKDIR="${MOUNT_POINT}/io500_datafiles"
mkdir -p ${IO500_WORKDIR}

CONFIG_FILE="myconfig.ini"
cat > "$CONFIG_FILE" << EOF
[global]
datadir = ${IO500_WORKDIR}
resultdir = ${RESULTS_DIR}
api = DFS --dfs.pool=${POOL_NAME} --dfs.cont=${CONTAINER_NAME} --dfs.dir_oclass=S1 --dfs.oclass=SX
EOF

# Number of nodes and ranks per node
NNODES=`wc -l < $PBS_NODEFILE` 
RANKS_PER_NODE=12 
NRANKS=$((NNODES * RANKS_PER_NODE))

# Run IO500
mpiexec -np ${NRANKS} -ppn ${RANKS_PER_NODE} ./io500 ${CONFIG_FILE}



# Cleanup
fusermount3 -u "$MOUNT_POINT" || warning "Failed to unmount $MOUNT_POINT"
    sleep 2

# Remove mount point
if [ -d "$MOUNT_POINT" ]; then
    rmdir "$MOUNT_POINT" || warning "Failed to remove directory $MOUNT_POINT"
fi

# Destroy container
daos cont destroy $POOL_NAME $CONTAINER_NAME || warning "Failed to destroy container $CONTAINER_NAME"